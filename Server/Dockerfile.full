# 포괄적인 Linux 컨테이너 설정
FROM mcr.microsoft.com/dotnet/runtime:9.0 AS runtime

# 필요한 종속성 설치
RUN apt-get update && apt-get install -y \
    libssl3 \
    libicu-dev \
    procps \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 애플리케이션 및 설정 파일 복사
COPY ./bin/Debug/net9.0/ ./

# Windows 네이티브 DLL 파일 복사 (참조용)
COPY ./ProudNet_libs/*.dll ./reference/

# Linux 전용 라이브러리 복사
COPY ./ProudNet_libs/linux/*.dll ./
COPY ./ProudNet_libs/linux/*.so ./

# 추가 OpenSSL 라이브러리 다운로드 (선택 사항)
RUN mkdir -p /opt/ssl && \
    wget -q https://www.openssl.org/source/openssl-1.1.1g.tar.gz -O /tmp/openssl.tar.gz && \
    tar -xzf /tmp/openssl.tar.gz -C /tmp && \
    cd /tmp/openssl-1.1.1g && \
    ./config --prefix=/opt/ssl --openssldir=/opt/ssl shared && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/openssl*

# 환경 변수 설정
ENV LD_LIBRARY_PATH=/app:/opt/ssl/lib:$LD_LIBRARY_PATH
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

# 포트 개방
EXPOSE 33334

# 디버깅을 위한 명령어 추가
RUN echo "Contents of /app:" && ls -la /app

# 실행 - 실패 시 디버깅을 위한 정보 출력
CMD ["sh", "-c", "dotnet TankServer.dll || (echo 'Application failed to start'; ls -la; ldd *.dll *.so 2>/dev/null || echo 'ldd command failed'; exit 1)"] 